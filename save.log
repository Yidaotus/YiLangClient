FUNCTION  coc#client#get_channel()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\autoload\coc\client.vim:149
Called 14 times
Total time:   0.000084
 Self time:   0.000084

count  total (s)   self (s)
   14              0.000018   if s:is_vim
                                return a:client['channel']
   14              0.000006   endif
   14              0.000023   return a:client['chan_id']

FUNCTION  coc#float#check_related()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\autoload\coc\float.vim:865
Called 3 times
Total time:   0.000382
 Self time:   0.000117

count  total (s)   self (s)
    3              0.000005   let invalids = []
    3   0.000296   0.000031   let ids = coc#float#get_float_win_list(1)
    3              0.000005   for id in ids
                                let target = getwinvar(id, 'target_winid', 0)
                                if (target && index(ids, target) == -1) || getwinvar(id, 'kind', '') == 'pum'
                                  call add(invalids, id)
                                endif
    3              0.000003   endfor
    3              0.000005   if !s:popup_list_api
    3              0.000016     let s:popup_list = filter(ids, "index(invalids, v:val) == -1")
    3              0.000002   endif
    3              0.000005   for id in invalids
                                call coc#float#close(id)
    3              0.000002   endfor

FUNCTION  coc#rpc#request()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\autoload\coc\rpc.vim:89
Called 2 times
Total time:   0.001391
 Self time:   0.000036

count  total (s)   self (s)
    2   0.000027   0.000012   if !coc#rpc#ready()
                                return ''
    2              0.000001   endif
    2   0.001360   0.000020   return s:client['request'](a:method, a:args)

FUNCTION  <SNR>15_request()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\autoload\coc\client.vim:156
Called 2 times
Total time:   0.001340
 Self time:   0.001330

count  total (s)   self (s)
    2   0.000024   0.000014   let channel = coc#client#get_channel(self)
    2              0.000005   if empty(channel) | return '' | endif
    2              0.000001   try
    2              0.000002     if s:is_vim
                                  let res = ch_evalexpr(channel, [a:method, a:args], {'timeout': 60 * 1000})
                                  if type(res) == 1 && res ==# ''
                                    throw 'request '.a:method. ' '.string(a:args).' timeout after 60s'
                                  endif
                                  let [l:errmsg, res] =  res
                                  if !empty(l:errmsg)
                                    throw l:errmsg
                                  else
                                    return res
                                  endif
    2              0.000001     else
    2              0.001216       return call('rpcrequest', [channel, a:method] + a:args)
                                endif
                              catch /.*/
                                if v:exception =~# 'E475'
                                  if get(g:, 'coc_vim_leaving', 0) | return | endif
                                  echohl Error | echom '['.self.name.'] server connection lost' | echohl None
                                  let name = self.name
                                  call s:on_exit(name, 0)
                                  execute 'silent do User ConnectionLost'.toupper(name[0]).name[1:]
                                elseif v:exception =~# 'E12'
                                  " neovim's bug, ignore it
                                else
                                  echohl Error | echo 'Error on request ('.a:method.'): '.v:exception | echohl None
                                endif
    2              0.000002   endtry

FUNCTION  coc#cursor#position()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\autoload\coc\cursor.vim:16
Called 3 times
Total time:   0.000044
 Self time:   0.000044

count  total (s)   self (s)
    3              0.000039   return [line('.') - 1, strchars(strpart(getline('.'), 0, col('.') - 1))]

FUNCTION  <SNR>15_notify()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\autoload\coc\client.vim:189
Called 12 times
Total time:   0.000821
 Self time:   0.000746

count  total (s)   self (s)
   12   0.000172   0.000097   let channel = coc#client#get_channel(self)
   12              0.000019   if empty(channel)
                                return ''
   12              0.000005   endif
   12              0.000009   try
   12              0.000011     if s:is_vim
                                  call ch_sendraw(channel, json_encode([0, [a:method, a:args]])."\n")
   12              0.000008     else
   12              0.000219       call call('rpcnotify', [channel, a:method] + a:args)
   12              0.000008     endif
                              catch /.*/
                                if v:exception =~# 'E475'
                                  if get(g:, 'coc_vim_leaving', 0)
                                    return
                                  endif
                                  echohl Error | echom '['.self.name.'] server connection lost' | echohl None
                                  let name = self.name
                                  call s:on_exit(name, 0)
                                  execute 'silent do User ConnectionLost'.toupper(name[0]).name[1:]
                                elseif v:exception =~# 'E12'
                                  " neovim's bug, ignore it
                                else
                                  echohl Error | echo 'Error on notify ('.a:method.'): '.v:exception | echohl None
                                endif
   12              0.000011   endtry

FUNCTION  coc#float#get_float_win_list()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\autoload\coc\float.vim:657
Called 3 times
Total time:   0.000264
 Self time:   0.000264

count  total (s)   self (s)
    3              0.000004   let res = []
    3              0.000011   let all = get(a:, 1, 0)
    3              0.000004   if s:is_vim
                                if s:popup_list_api
                                  return filter(popup_list(), 'popup_getpos(v:val)["visible"]'.(all ? '' : '&& getwinvar(v:val, "float", 0)'))
                                endif
                                return filter(s:popup_list, 's:popup_visible(v:val)')
    3              0.000044   elseif has('nvim') && exists('*nvim_win_get_config')
    3              0.000005     let res = []
    9              0.000024     for i in range(1, winnr('$'))
    6              0.000015       let id = win_getid(i)
    6              0.000042       let config = nvim_win_get_config(id)
    6              0.000021       if empty(config) || empty(config['relative'])
    6              0.000006         continue
                                  endif
                                  " ignore border & button window & others
                                  if !all && !getwinvar(id, 'float', 0)
                                    continue
                                  endif
                                  call add(res, id)
    3              0.000003     endfor
    3              0.000004     return res
                              endif
                              return []

FUNCTION  coc#rpc#ready()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\autoload\coc\rpc.vim:32
Called 14 times
Total time:   0.000115
 Self time:   0.000115

count  total (s)   self (s)
   14              0.000065   if empty(s:client) || s:client['running'] == 0
                                return 0
   14              0.000007   endif
   14              0.000013   return 1

FUNCTION  CocActionAsync()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\plugin\coc.vim:82
Called 3 times
Total time:   0.000489
 Self time:   0.000052

count  total (s)   self (s)
    3   0.000483   0.000045   return s:AsyncRequest(a:name, a:000)

FUNCTION  <SNR>12_Autocmd()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\plugin\coc.vim:245
Called 9 times
Total time:   0.000943
 Self time:   0.000119

count  total (s)   self (s)
    9              0.000020   if !g:coc_service_initialized
                                return
    9              0.000006   endif
    9   0.000891   0.000067   call coc#rpc#notify('CocAutocmd', a:000)

FUNCTION  <SNR>12_SyncAutocmd()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\plugin\coc.vim:252
Called 1 time
Total time:   0.000645
 Self time:   0.000017

count  total (s)   self (s)
    1              0.000003   if !g:coc_service_initialized
                                return
    1              0.000001   endif
    1   0.000638   0.000009   call coc#rpc#request('CocAutocmd', a:000)

FUNCTION  <SNR>12_AsyncRequest()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\plugin\coc.vim:112
Called 3 times
Total time:   0.000438
 Self time:   0.000120

count  total (s)   self (s)
    3              0.000038   let Cb = empty(a:args)? v:null : a:args[len(a:args) - 1]
    3              0.000011   if type(Cb) == 2
                                if !coc#rpc#ready()
                                  call Cb('service not started', v:null)
                                else
                                  call coc#rpc#request_async(a:name, a:args[0:-2], Cb)
                                endif
                                return ''
    3              0.000002   endif
    3   0.000345   0.000027   call coc#rpc#notify(a:name, a:args)
    3              0.000002   return ''

FUNCTION  coc#rpc#notify()
    Defined: ~\AppData\Local\nvim-data\plugged\coc.nvim\autoload\coc\rpc.vim:96
Called 12 times
Total time:   0.001141
 Self time:   0.000220

count  total (s)   self (s)
   12   0.000173   0.000073   if !coc#rpc#ready()
                                return ''
   12              0.000005   endif
   12   0.000927   0.000106   call s:client['notify'](a:method, a:args)
   12              0.000012   return ''

FUNCTIONS SORTED ON TOTAL TIME
count  total (s)   self (s)  function
    2   0.001391   0.000036  coc#rpc#request()
    2   0.001340   0.001330  <SNR>15_request()
   12   0.001141   0.000220  coc#rpc#notify()
    9   0.000943   0.000119  <SNR>12_Autocmd()
   12   0.000821   0.000746  <SNR>15_notify()
    1   0.000645   0.000017  <SNR>12_SyncAutocmd()
    3   0.000489   0.000052  CocActionAsync()
    3   0.000438   0.000120  <SNR>12_AsyncRequest()
    3   0.000382   0.000117  coc#float#check_related()
    3   0.000264             coc#float#get_float_win_list()
   14   0.000115             coc#rpc#ready()
   14   0.000084             coc#client#get_channel()
    3   0.000044             coc#cursor#position()

FUNCTIONS SORTED ON SELF TIME
count  total (s)   self (s)  function
    2   0.001340   0.001330  <SNR>15_request()
   12   0.000821   0.000746  <SNR>15_notify()
    3              0.000264  coc#float#get_float_win_list()
   12   0.001141   0.000220  coc#rpc#notify()
    3   0.000438   0.000120  <SNR>12_AsyncRequest()
    9   0.000943   0.000119  <SNR>12_Autocmd()
    3   0.000382   0.000117  coc#float#check_related()
   14              0.000115  coc#rpc#ready()
   14              0.000084  coc#client#get_channel()
    3   0.000489   0.000052  CocActionAsync()
    3              0.000044  coc#cursor#position()
    2   0.001391   0.000036  coc#rpc#request()
    1   0.000645   0.000017  <SNR>12_SyncAutocmd()

